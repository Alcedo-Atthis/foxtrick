There is a simple example module already written for forum templates in forumtemplates.js, which registers itself as a listener for the forum write page. When the user visits that page, the run() function of the module gets called so you just have to put your code in there. The run() function accepts two arguments: the page name (as in module.js ht_pages, you are free to add new ones) and the current document. Please do not use the document global variable, it will most probably not work anyway.

The module is initialized once by calling its init() function. Just put your initialization code there and remember to register as a page listener in init().

Steps to add a new module are as follows:
1. create a new module in a *.js file. Have an init() and run() functions in main class. See registerPageHandler() and registerAllPagesHandler() functions documentation in foxtrick.js for more info. A MODULE_NAME string is also required in your class with your module name.
2. register to listen for pages (can be more than one ) as needed in your init() function. Page names are in the module.js, feel free to add new ones. If you listen to more than one page, use a switch( page ) in run() function (page is supplied as an argument to run()).
3. add the class name to Foxtrick.modules array in modules_list.js
4. add your script file in loader.js
5. If you want your module to be enabled by default, add a line to foxtrick/defaults/preferences/foxtrick.js according to instructions there.
6. Add a module description in foxtrick.properties (see the file for details).


Other things should be self-explanatory by looking at the code. Ask if you need help.

Of course we can and want to reuse the old code, so you can just take old code, adapt it for the new design, wrap it up in run() function and you are done!

Localization:
PLEASE MAKE SURE YOU LOCALIZE YOUR MODULE PROPERLY. Each message string you use in your .js file should be done in the following way:
1. add a line with that message to locale/en-US/foxtrick.properties (and other locales if you can) under some_name that allows it to be identified easily
2. in place of that message string in .js file use Foxtrickl10n.getString( 'some_name' )
