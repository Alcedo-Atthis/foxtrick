Developing FoxTrick

Foxtrick is a browser add-on for Gecko-based browsers including Firefox, and
Google Chrome. It is mainly written in JavaScript.

FoxTrick uses subversion for version control, and is hosted at Google Code:
http://code.google.com/p/foxtrick

There is a list of recent changes:
http://code.google.com/p/foxtrick/source/list

And if you are bored and have nothing to do, you could check the issues list:
http://code.google.com/p/foxtrick/issues/list


Getting a copy of source
========================

Please refer to the instructions here:
http://code.google.com/p/foxtrick/source/checkout


Committing
==========

If you have write access to the repository, the easiest way of committing is to
run the following command:
svn commit

Or if you don't have write access, you could send a patch to the developeres,
who will be more than happy to apply your work.


Defining a commit
=================

You should make your commit as an integrate, that is: do not make two separate
changes in one commit, and don't make a commit that breaks something which
requires other commits to fix if you are aware of the potential break. Don't be
afraid that your commit only fixes a simple typo, or fixes inconsistent white
spaces; don't let them hitchhike commits of other changes, leave them in a
single commit.

Use internal subversion functions instead of manual manipulation of files. For
example, use `svn mv' to revert an existing commit, instead of a simple rename
and then add the new file to subversion. The same applies to reverting commits,
etc.


Commit message
==============

Please compose your commit message in the following format:
-------------------------------
<A short line describes your changes briefly>

{
If necessary, describe what files, functions and/or interfaces are changed; why
do you change these; references of tasks or bugs (links to bug tracker page
preferred).
}


Creating a new module
=====================

Most of FoxTrick's functions are implemented in modules. Generally, each module
is a JavaScript file, placed in the directory content/CATEGORY.

Each file, named like "module-name.js", contains a single single object,
named in the way like FoxtrickModuleName, which should conform the following
specifications:
# A property named MODULE_NAME, which is the name of the module, named in the
  way like "SkillTable".
# A property named MODULE_CATEGORY, which specifies its category. You can look
  up the list of categories in the file content/env.js.
# A property named PAGES, which is an array containing the pages that the module
  should run on. The pages are listed at content/pages.js.
# There are also other properties including OPTIONS, CSS, etc.
  You could refer to the source of existing modules for their uses. Of course,
  usually they mean what their names imply.
# A property function init(), which will be run once as soon as FoxTrick is
  loaded. It is usually used to initialize the module.
# A property function run(doc), which will be run on the pages specified
  in the PAGES property. The parameter doc is the HTML document.
# A property function change(doc), which is similar to run(), but is
  called whenever the DOM tree of the HTML document is modified.

Generally speaking, all properties except the MODULE_NAME could be omitted.

After creating that JavaScript file and placing it under the appropriate
directory, you should add a line to content/overlay.xul, content/bootstrap-firefox.js
content/preferences.html and content/background.html respectively to inform the browser to load
your script:
<script type="application/x-javascript" src="chrome://foxtrick/content/category/module.js" />

There also need to be an entry in manifest.json in order for Chrome to
include the file.

You also need to tell FoxTrick that you have created that module by placing the
name of your object in file 'modules'.

To show the user the function of your module, you need to add a line to
content/foxtrick.properties, with a description of your module, like:
foxtrick.modules.MyModule.desc=This is my module.

If you have options for your module, descriptions of the options should also
be added.

The final step is modifying foxtrick/defaults/preferences/foxtrick.js and state
there if the module is to be enabled/disabled by default. No matter what, this
step is necessary.

There are many other interesting aspects of a module, and you can gain knowledge
from existing modules. The YouthPromotes module, which is in the file
content/shortcuts_and_tweaks/youth-promotes.js, is very simple and could help
you understand the basics. If you have problems, feel free to ask the
developers.


Developing a module
===================

Developing FoxTrick is just as easy as developing normal client side JavaScript,
except that FoxTrick provides you more handy utilities.

FoxTrick is an internationalization add-on, so that you should make sure to
make your code internationalized. The file content/l10n.js provides such
utility functions. For showing strings in most cases, you should use the
Foxtrickl10n.getString() method, and the list of strings available could be
referred to at content/foxtrick.properties. Try reusing existing strings before
creating your own.

FoxTrick also provides page-specific utilities, so that you save your time
using those utilities. Find them under the content/pages/ directory.

We are unable to give a comprehensive list of the utility functions, you could
find more in content/foxtrick.js and other files.


Localizing FoxTrick
===================

Since FoxTrick is a site-specific add-on for Hattrick, we only provide
localizations for the ones that are present at Hattrick. Each locale has its
directory under content/locale/, named as the locale code.

In most cases, inside each directory there are two files: htlang.xml and
foxtrick.properties.

htlang.xml: This file is an XML file mainly containing the strings used by
Hattrick, and is used by FoxTrick to match specific strings to see what Hattrick
mean by them. Most strings are directly grabbed from Hattrick's website
following instructions, while some abbreviations are required to translate.

foxtrick.properties: This file is used by FoxTrick to localize strings. It
contains descriptions of FoxTrick and its modules, and information displayed by
FoxTrick. They are translated from the file content/foxtrick.properties,
but keep in mind that you only need to translate the part to the right of the
eqaul sign, and keep the left hand side unchanged.

Exceptions are that the foxtrick.properties of English (content/locale/en/) is
directly placed under content/ since English is used as the main language. And
locales that don't have translations don't have foxtrick.properties under their
corresponding directory. You are welcomed to join our translation team if you
see that a language that you are capable of doesn't have a translation or the
translation is out-dated.


Happy Hacking!


Ryan Li <ryan@ryanium.com>
26 June 2010
Revised 11 June 2011
Revised 17 July 2011
Revised 25 November 2011 (CatzHoek)
Revised 26 September 2013 (teles)